name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  goreleaser-check:
    name: GoReleaser Config Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          distribution: goreleaser
          version: "~> v2"

      - name: Check GoReleaser config
        run: goreleaser check

  test:
    name: Test Suite
    needs: goreleaser-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: ''

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run CI checks
        run: just ci-check

      - name: Install Moon CLI directly (right before tests)
        run: |
          echo "=== INSTALLING MOON CLI TO /usr/local/bin ==="
          echo "Current PATH: $PATH"
          echo "Installing Moon CLI..."

          # Install Moon to default location first
          bash <(curl -fsSL https://moonrepo.dev/install/moon.sh)

          # Copy Moon to /usr/local/bin so it's in default PATH for child processes
          sudo cp "$HOME/.moon/bin/moon" /usr/local/bin/moon
          sudo chmod +x /usr/local/bin/moon

          echo ""
          echo "=== MOON INSTALLATION VERIFICATION ==="
          echo "Moon accessible via 'which moon': $(which moon)"
          echo "Moon version: $(moon --version)"
          echo "Moon binary details: $(ls -la /usr/local/bin/moon)"
          echo "Moon binary permissions: $(stat -c '%A %U:%G' /usr/local/bin/moon)"
          echo "PATH contains /usr/local/bin: $(echo $PATH | grep -o '/usr/local/bin' || echo 'NOT FOUND')"
          echo ""
          echo "=== CHILD PROCESS TEST ==="
          echo "Testing Moon in fresh environment (simulating test conditions):"
          env -i PATH="/usr/local/bin:/usr/bin:/bin" bash -c "which moon && moon --version"
          echo ""
          echo "=== ENVIRONMENT CHECK ==="
          echo "CI environment variables:"
          echo "  CI=${CI}"
          echo "  GITHUB_ACTIONS=${GITHUB_ACTIONS}"
          echo "  HOME=${HOME}"
          echo ""

      - name: Run tests
        run: |
          echo "=== RUNNING TESTS ==="
          echo "Moon binary location before tests: $(which moon)"
          echo "Moon accessible via PATH: $(moon --version)"
          echo "pnpm accessible via PATH: $(pnpm --version)"
          echo "Node.js version: $(node --version)"
          echo ""
          echo "Running tests sequentially to avoid property-based test conflicts..."
          just ci-test-sequential

  build:
    name: Build Check (Unix)
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    needs: [goreleaser-check, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0

      - name: Install cargo-zigbuild
        run: cargo install --locked cargo-zigbuild

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          distribution: goreleaser
          version: "~> v2"

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Test GoReleaser build
        run: just check-release-ci

  build-windows:
    name: Build Check (Windows)
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    needs: [goreleaser-check, test]
    runs-on: windows-2025
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable-msvc
          components: clippy, rustfmt

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          distribution: goreleaser
          version: "~> v2"

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry\index\
            ~\.cargo\registry\cache\
            ~\.cargo\git\db\
            target\
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Test GoReleaser Windows build
        run: just check-release-windows
        shell: powershell
